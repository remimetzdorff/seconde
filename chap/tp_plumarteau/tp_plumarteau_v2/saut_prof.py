import numpy as npimport matplotlib.pyplot as plt########## DONNÉES#########v0 = 10alpha = np.pi/6t = np.linspace(0,1,11)X = v0*np.cos(alpha) * tY = -5 * t**2 + v0 * np.sin(alpha) * t##################################################### REPRÉSENTATION GRAPHIQUE DES POSITIONS SUCCESSIVES####################################################fig = plt.figure(figsize=(8,6))# Le solplt.plot([-1,10], [0, 0], 'k')plt.fill_between([-1,10], [-1, -1], [0, 0], facecolor='k', alpha=0.25)# Les positions successivesc = plt.plot(X, Y, "o")################### VECTEURS VITESSE################### Point d'originex = X[4]y = Y[4]# Vitesseu = (X[5]-X[4]) / (t[1]-t[0]) # Vitesse horizontalev = (Y[5]-Y[4]) / (t[1]-t[0])# Vitesse verticaleplt.quiver(x, y, u, v, color="red", angles='xy',scale=5, scale_units='xy')# Titre, nom des axes et légendeplt.title("Saut en longueur")plt.xlabel("X (m)")plt.ylabel("Y (m)")# Mise en forme du graphiqueticks = c[0].get_data()[1]ax = fig.axes[0]ax.set_xlim(-1,10)ax.set_ylim(-1, 5)ax.set_aspect("equal")for i in range(len(X)):    ax.annotate(r"$M_{%i}$"%(i), (X[i], Y[i]), textcoords="offset points", xytext=(0,10))plt.show()